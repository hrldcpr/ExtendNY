1st ave:
	6th st: 40.72635220924176, -73.98622423862304
	14th st: 40.73123043863883, -73.98261934970702
	59th st: 40.75958212967125, -73.96201998447265
	120th st: 40.79854596813113, -73.9336100265869
6th ave:
	14th st: 40.73734398116459, -73.99686724399413
	59th st: 40.76562805935546, -73.976310794104
	120th st: 40.80458835229201, -73.94781500552978
10th ave:
	14th st: 40.742091344736004, -74.00823981021728
	59th st: 40.77040590502328, -73.9876404449829
	120th st: 40.809330913646015, -73.9592734024414
	188th st: 40.85248562963915, -73.92768770908202

st = (40.85248562963915-40.742091344736004, -73.92768770908202--74.00823981021728) / (188-14)
  = (0.0006344499132364601, 0.0004629431099727236)
  = (1/1576.16855032542, 1/2160.0926300834667)

ave = (40.77040590502328-40.75958212967125, -73.9876404449829--73.96201998447265) / (10-1)
  = (0.0012026417057811045, -0.0028467178344726562)
  = (1/831.502845105899, 1/-351.2817420435511)

sts: (1576,2160), (1579,2167)
aves: (832,-351), (834,-351)

newyorkextended.com
knewyour.com
manhatting.com

=drawing=
avenues are geodesics from "equator" to "poles"
	since equator is geodesic, can compute these points with computeOffset(theta-90).
streets are circles around "poles"

=locating=
can binary search for ave where computeHeading(ave,x)==theta
then can compute street=computeDistanceBetween(ave,x)
